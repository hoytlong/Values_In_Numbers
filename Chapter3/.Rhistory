scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(axis.text.x = element_text(size = base_size * 1.5, angle = 45, hjust = 1, colour = "black")) +
guides(fill=guide_legend(title="Strength", reverse=TRUE))
#race_cxt <- race_cxt[,c(1,5)]
race_cxt <- race_cxt[c(3,11,12,13,16,17,18,20,22,24,25,26),]
View(race_cxt)
race_cxt.m <- melt(race_cxt)
race_cxt.m$Category <- factor(race_cxt.m$Category, levels = rev(as.character(race_cxt[[1]])))
#replace NAs with zero
race_cxt.m[is.na(race_cxt.m)] <- 0
p <- ggplot(race_cxt.m, aes(variable, Category)) + geom_tile(aes(fill = value), colour = "grey") +
scale_fill_gradient(low = "white", high = "black")
base_size <- 9
p + theme_grey(base_size = base_size * 2) + labs(x = "", y = "") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(axis.text.x = element_text(size = base_size * 1.5, angle = 45, hjust = 1, colour = "black")) +
guides(fill=guide_legend(title="Strength", reverse=TRUE))
p + theme_grey(base_size = base_size * 2.5) + labs(x = "", y = "") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(axis.text.x = element_text(size = base_size * 1.5, angle = 45, hjust = 1, colour = "black")) +
guides(fill=guide_legend(title="Strength", reverse=TRUE))
p + theme_grey(base_size = base_size * 3) + labs(x = "", y = "") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(axis.text.x = element_text(size = base_size * 1.5, angle = 45, hjust = 1, colour = "black")) +
guides(fill=guide_legend(title="Strength", reverse=TRUE))
e^2.88
exp^2.88
library(ROCR)
library(e1071)
library(lattice)
library(ggplot2)
# read in data
data = read.csv("C:/Users/Hoyt/Dropbox/SOC_PROJECT/Rcode/data.csv")
data$class_labels = as.factor(data$class_labels)  #encodes labels as factors (categories)
colnames(data)
mean(tt_ratio)
mean(data$tt_ratio)
boxplot(mean(data$tt_ratio))
?boxplot
boxplot(tt_ratio~class_labels, data)
View(data)
boxplot(tt_ratio_no_stopwords~class_labels, data)
pairwise.t.test(data$tt_ratio, data$class_label, p.adjust="bonferroni")
pairwise.t.test(data$tt_ratio_no_stopwords, data$class_label, p.adjust="bonferroni")
exp(2.88)
exp(2.88) * .01
.178 - 1
exp(2.78)
exp(2.78) * .01
.16 - 1
1 - .16
1 - .178
exp(-14.14)
exp(-0.007)
library(ggplot2)
library(scales)
library(openxlsx)
library(plyr)
library(tidyverse)
library(reshape2)
library(directlabels)
library(readr)
#read in corpus metadata
meta <- openxlsx::read.xlsx("C:/Users/Hoyt/Dropbox/JAPAN_CORPUS/Corpus_Metadata_Clean.xlsx", sheet = 1)
#filter out by source to get just Aozora texts
meta <- meta %>% filter(SOURCE == "aozora")
#filter out duplicate texts
meta <- meta %>% filter(is.na(DUPE))
#get only works marked as fiction
fiction <- meta %>% filter(GENRE == "Fiction")
#filter out translations
fiction <- fiction %>% filter(is.na(TRANSLATION))
#filter out juvenile literature
fiction <- fiction %>% filter(is.na(SUBGENRE))
dfl <- ddply(fiction, .(AUTHOR_ID), summarize, y=length(AUTHOR_ID))
dfl <- dfl[with(dfl, order(-y)), ]
dfl$rank <- 1:nrow(dfl)
auth_rank <- merge(fiction[, c("AUTHOR_ID", "AUTHOR", "AUTHOR_LAST", "AUTHOR_FIRST")], dfl, by="AUTHOR_ID")
auth_rank$FULL_NAME <- paste(auth_rank$AUTHOR_LAST, auth_rank$AUTHOR_FIRST)
#set the following number to the rank above which you want to display author names
auth_rank$high[auth_rank$y >= 49] <- auth_rank$AUTHOR[auth_rank$y >= 49]
auth_rank <- ddply(auth_rank, .(rank, high, AUTHOR), summarize, y=length(rank))
#limit to top 50 authors
auth_rank <- auth_rank %>% filter(rank <= 50)
ggplot(auth_rank, aes(rank, y=y, label=high)) + geom_bar(stat="identity", width=.3, show.legend=FALSE) +
geom_text(vjust=1, hjust=0, angle=45, size=3.5,
position = position_jitter(width=0, height=0)) +
scale_y_continuous(limits=c(0, 450)) + xlab("Author Rank by Number of Texts") + ylab("Number of Works")
View(auth_rank)
auth_rank <- merge(fiction[, c("AUTHOR_ID", "AUTHOR", "AUTHOR_LAST", "AUTHOR_FIRST")], dfl, by="AUTHOR_ID")
auth_rank$FULL_NAME <- paste(auth_rank$AUTHOR_LAST, auth_rank$AUTHOR_FIRST)
#set the following number to the rank above which you want to display author names
auth_rank$high[auth_rank$y >= 45] <- auth_rank$AUTHOR[auth_rank$y >= 45]
auth_rank <- ddply(auth_rank, .(rank, high, AUTHOR), summarize, y=length(rank))
#limit to top 50 authors
auth_rank <- auth_rank %>% filter(rank <= 50)
ggplot(auth_rank, aes(rank, y=y, label=high)) + geom_bar(stat="identity", width=.3, show.legend=FALSE) +
geom_text(vjust=1, hjust=0, angle=45, size=3.5,
position = position_jitter(width=0, height=0)) +
scale_y_continuous(limits=c(0, 450)) + xlab("Author Rank by Number of Texts") + ylab("Number of Works")
View(auth_rank)
fict_subset <- meta %>% filter(FICTION_CORPUS == "TRUE")
View(fict_subset)
ggplot(data = fict_subset, aes(x=factor(PUBL_START), y=y, group=1)) + geom_line() +
scale_x_discrete(breaks=c(1900,1910,1920,1930,1940,1950,1960)) +
xlab("Year of Publication") + ylab("Number of Titles")
ggplot(data = fict_subset, aes(x=factor(PUBL_START), group=1)) + geom_line() +
scale_x_discrete(breaks=c(1900,1910,1920,1930,1940,1950,1960)) +
xlab("Year of Publication") + ylab("Number of Titles")
View(fict_subset)
fict_counts <- plyr::ddply(fict_subset, .(PUBL_START), summarize, y=length(WORK_TITLE))
ggplot(data = fict_counts, aes(x=factor(PUBL_START), group=1)) + geom_line() +
scale_x_discrete(breaks=c(1900,1910,1920,1930,1940,1950,1960)) +
xlab("Year of Publication") + ylab("Number of Titles")
ggplot(data = fict_counts, aes(x=factor(PUBL_START), y=y, group=1)) + geom_line() +
scale_x_discrete(breaks=c(1900,1910,1920,1930,1940,1950,1960)) +
xlab("Year of Publication") + ylab("Number of Titles")
View(fict_counts)
View(fict_counts)
fict_counts <- fict_counts %>% filter(is.na(y))
#calculate the works per year and graph
fict_counts <- plyr::ddply(fict_subset, .(PUBL_START), summarize, y=length(WORK_TITLE))
fict_counts <- fict_counts %>% filter(!is.na(y))
#calculate the works per year and graph
fict_counts <- fict_subset %>% filter(is.na(PUBL_START))
fict_subset <- meta %>% filter(FICTION_CORPUS == "TRUE")
#calculate the works per year and graph
fict_counts <- fict_subset %>% filter(is.na(PUBL_START))
#calculate the works per year and graph
fict_counts <- fict_subset %>% filter(!is.na(PUBL_START))
fict_counts <- plyr::ddply(fict_subset, .(PUBL_START), summarize, y=length(WORK_TITLE))
ggplot(data = fict_counts, aes(x=factor(PUBL_START), y=y, group=1)) + geom_line() +
scale_x_discrete(breaks=c(1890,1900,1910,1920,1930,1940,1950,1960)) +
xlab("Year of Publication") + ylab("Number of Titles")
fict_counts <- plyr::ddply(fict_counts, .(PUBL_START), summarize, y=length(WORK_TITLE))
#calculate the works per year and graph
fict_counts <- fict_subset %>% filter(!is.na(PUBL_START))
fict_counts <- plyr::ddply(fict_counts, .(PUBL_START), summarize, y=length(WORK_TITLE))
ggplot(data = fict_counts, aes(x=factor(PUBL_START), y=y, group=1)) + geom_line() +
scale_x_discrete(breaks=c(1890,1900,1910,1920,1930,1940,1950,1960)) +
xlab("Year of Publication") + ylab("Number of Titles")
fict_counts <- fict_subset %>% filter(!is.na(PUBL_START))
fict_counts <- plyr::ddply(fict_counts, .(PUBL_START), summarize, y=length(WORK_TITLE))
ggplot(data = fict_counts, aes(x=factor(PUBL_START), y=y, group=1)) + geom_line() +
scale_x_discrete(breaks=c(1890,1900,1910,1920,1930,1940,1950,1960)) +
xlab("Year of Publication") + ylab("Number of Works")
library(ggplot2)
library(scales)
library(openxlsx)
library(plyr)
library(tidyverse)
library(reshape2)
library(directlabels)
library(readr)
library(ggrepel)
meta <- openxlsx::read.xlsx("C:/Users/Hoyt/Dropbox/JAPAN_CORPUS/Corpus_Metadata_Clean.xlsx", sheet = 1)
#meta <- openxlsx::read.xlsx("/Users/hoytlong/Dropbox/JAPAN_CORPUS/Corpus_Metadata_Clean.xlsx", sheet = 1)
#filter out by source to get just Aozora texts
meta <- meta %>% filter(SOURCE == "aozora")
#filter out duplicate texts
meta <- meta %>% filter(is.na(DUPE))
#all texts marked as part of fiction corpus, excluding non-Aozora material
fict_subset <- meta %>% filter(FICTION_CORPUS == "TRUE")
#import data with Part of Speech counts
meta <- openxlsx::read.xlsx("C:/Users/Hoyt/Dropbox/JAPAN_CORPUS/POSCounts.xlsx", sheet = 1)
x_upp <- mean(meta$N_RATIO) + (2 * sd(meta$N_RATIO))
x_low <- mean(meta$N_RATIO) - (2 * sd(meta$N_RATIO))
y_upp <- mean(meta$MVR) + (2 * sd(meta$MVR))
y_low <- mean(meta$MVR) - (2 * sd(meta$MVR))
meta$group <- (meta$AUTHOR_LAST == "Hori" & meta$N_RATIO < x_low) |
(meta$AUTHOR_LAST == "Miyazawa" & meta$MVR > y_upp) |
(meta$AUTHOR_FIRST == "Ogai" & meta$MVR < y_low & meta$N_RATIO > x_upp)
ggplot(data=meta, aes(x=N_RATIO, y=MVR, label=ifelse(group=="TRUE", AUTHOR_LAST, " "))) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_smooth(method = "lm") +
#geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " "))) +
geom_text_repel(size = 5.5, family="Times", nudge_y = .2, nudge_x = -.3)
ggplot(data=meta, aes(x=N_RATIO, y=MVR, label=ifelse(group=="TRUE", AUTHOR_LAST, " "))) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
#geom_smooth(method = "lm") +
#geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " "))) +
geom_text_repel(size = 5.5, nudge_y = .2, nudge_x = -.3)
ggplot(data=meta, aes(x=N_RATIO, y=MVR, label=ifelse(group=="TRUE", AUTHOR_LAST, " "))) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
k
ggplot(data=meta, aes(x=N_RATIO, y=MVR, label=ifelse(group=="TRUE", AUTHOR_LAST, " "))) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed")
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " ")))
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " "))) +
xlab("Noun Ratio") + ylab("MVR Value") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " ")), position=position_jitter(width=1,height=1)) +
xlab("Noun Ratio") + ylab("MVR Value") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
#geom_smooth(method = "lm") +
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " ")), position=position_jitter(width=2,height=2)) +
xlab("Noun Ratio") + ylab("MVR Value") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " ")), position=position_jitter(width=.5,height=1)) +
xlab("Noun Ratio") + ylab("MVR Value") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " ")), position=position_jitter(width=2,height=1)) +
xlab("Noun Ratio") + ylab("MVR Value") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " ")), position=position_jitter()) +
xlab("Noun Ratio") + ylab("MVR Value") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " ")), position=position_jitter(width=1)) +
xlab("Noun Ratio") + ylab("MVR Value") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " ")), position=position_jitter(height=1)) +
xlab("Noun Ratio") + ylab("MVR Value") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " ")), position=position_jitter(height=1.5)) +
xlab("Noun Ratio") + ylab("MVR Value") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
meta <- openxlsx::read.xlsx("C:/Users/Hoyt/Dropbox/JAPAN_CORPUS/KanjiCounts.xlsx", sheet = 1)
meta <- meta %>% filter(!is.na(PUBL_START))
meta <- meta[which(meta$PUBL_START > 1899),]
#calculate the ratio of kanji across all texts for that year
kanji_ratio <- meta %>%
group_by(PUBL_START) %>%
summarize(N = sum(KANJI_COUNT) / (sum(KANJI_COUNT) + sum(NON_KANJI_COUNT))) %>%
mutate(lag1 = lag(N),
lag2 = lag(N,2),
avg = (lag1+lag2)/2)
#calculate the mean ratio of kanji per year
kanji_ratio_mean <- meta %>%
group_by(PUBL_START) %>%
summarize(N = mean(KANJI_COUNT / (KANJI_COUNT + NON_KANJI_COUNT))) %>%
mutate(lag1 = lag(N),
lag2 = lag(N,2),
avg = (lag1+lag2)/2)
ggplot(data=kanji_ratio_mean, aes(x=PUBL_START, y=avg, group=1)) + geom_line() + scale_y_continuous(limits = c(.10, .25)) +
geom_smooth() +
xlab("Year") + ylab("Mean Proportion of Kanji Characters") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=kanji_ratio_mean, aes(x=PUBL_START, y=avg, group=1)) + geom_line() + scale_y_continuous(limits = c(.10, .25)) +
geom_smooth(aes(color="black")) +
xlab("Year") + ylab("Mean Proportion of Kanji Characters") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=kanji_ratio_mean, aes(x=PUBL_START, y=avg, group=1, color="black")) +
geom_line() + scale_y_continuous(limits = c(.10, .25)) +
geom_smooth() +
xlab("Year") + ylab("Mean Proportion of Kanji Characters") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=kanji_ratio_mean, aes(x=PUBL_START, y=avg, group=1)) +
geom_line() + scale_y_continuous(limits = c(.10, .25)) +
geom_smooth() +
xlab("Year") + ylab("Mean Proportion of Kanji Characters") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=kanji_ratio_mean, aes(x=PUBL_START, y=avg, group=1)) +
geom_line() + scale_y_continuous(limits = c(.10, .25)) +
geom_smooth(color="black") +
xlab("Year") + ylab("Mean Proportion of Kanji Characters") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
#import data with Part of Speech counts
meta <- openxlsx::read.xlsx("C:/Users/Hoyt/Dropbox/JAPAN_CORPUS/POSCounts.xlsx", sheet = 1)
x_upp <- mean(meta$N_RATIO) + (2 * sd(meta$N_RATIO))
x_low <- mean(meta$N_RATIO) - (2 * sd(meta$N_RATIO))
y_upp <- mean(meta$MVR) + (2 * sd(meta$MVR))
y_low <- mean(meta$MVR) - (2 * sd(meta$MVR))
#single out points for labeling
meta$group <- (meta$AUTHOR_LAST == "Hori" & meta$N_RATIO < x_low) |
(meta$AUTHOR_LAST == "Miyazawa" & meta$MVR > y_upp) |
(meta$AUTHOR_FIRST == "Ogai" & meta$MVR < y_low & meta$N_RATIO > x_upp)
#produce plot
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " ")), position=position_jitter(height=1.5)) +
xlab("Noun Ratio") + ylab("MVR Value") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
ggplot(data=meta, aes(x=N_RATIO, y=MVR)) +
geom_point(aes(color=group), size=1.5) +
scale_color_manual(values = c("grey","black")) +
geom_hline(yintercept=c(y_low,y_upp), linetype="dashed") +
geom_vline(xintercept=c(x_low, x_upp), linetype="dashed") +
geom_text(aes(label=ifelse(group=="TRUE", AUTHOR_LAST, " ")), position=position_jitter(height=1.5)) +
xlab("Noun Ratio") + ylab("MVR Value") +
theme(legend.position = "", axis.text=element_text(size=12), title=element_text(size=12)) #,face="bold"))
install.packages("SpeedReader")
install.packages("devtools")
library("devtools")
devtools::install_github("matthewjdenny/SpeedReader")
devtools::install_github("matthewjdenny/SpeedReader")
library(ggplot1)
library(ggplot2)
install.packages("backports")
devtools::install_github("matthewjdenny/SpeedReader")
library(SpeedReader)
?feature_selection
?contingency_table
#load libraries
library(ggplot2)
library(scales)
library(openxlsx)
library(plyr)
library(tidyverse)
library(directlabels)
library(reshape2)
library(readr)
library(ggrepel)
meta <- openxlsx::read.xlsx("C:/Users/Hoyt/Dropbox/JAPAN_CORPUS/Corpus_Metadata_Clean.xlsx", sheet = 1)
meta <- meta %>% filter(GENRE == "FICTION")
meta <- openxlsx::read.xlsx("C:/Users/Hoyt/Dropbox/JAPAN_CORPUS/Corpus_Metadata_Clean.xlsx", sheet = 1)
meta <- meta %>% filter(FICTION_CORPUS == "TRUE")
meta <- meta %>% filter(is.na(DUPE))
meta <- meta %>% filter(PUBL_START > 1925)
meta <- openxlsx::read.xlsx("C:/Users/Hoyt/Dropbox/JAPAN_CORPUS/Corpus_Metadata_Clean.xlsx", sheet = 1)
meta <- meta %>% filter(FICTION_CORPUS == "TRUE")
meta <- meta %>% filter(is.na(DUPE))
meta <- meta %>% filter(PUBL_START >= 1925)
meta <- meta %>% filter(PUBL_START <= 1940)
View(meta)
meta <- meta %>% group_by(PUBL_START, WORK_TITLE) %>% filter(n() > 2)
View(meta)
meta <- openxlsx::read.xlsx("C:/Users/Hoyt/Dropbox/JAPAN_CORPUS/Corpus_Metadata_Clean.xlsx", sheet = 1)
meta <- meta %>% filter(FICTION_CORPUS == "TRUE")
meta <- meta %>% filter(is.na(DUPE))
meta <- meta %>% filter(PUBL_START >= 1925)
meta <- meta %>% filter(PUBL_START <= 1940)
meta <- meta %>% group_by(PUBL_START, WORK_TITLE) %>% filter(n() <= 2)
p <- ggplot(data = meta, aes(x = PUBL_START))
p + geom_histogram()
p <- ggplot(data = meta, aes(x = PUBL_START))
p + geom_histogram(bins=16)
ggplot(data = meta, aes(x=factor(PUBL_START), y=y, group=1)) + geom_line() +
scale_x_discrete(breaks=c(1925,1930,1935,1940)) +
xlab("Year of Publication") + ylab("Number of Works")
fict_counts <- plyr::ddply(meta, .(PUBL_START), summarize, y=length(WORK_TITLE))
ggplot(data = fict_counts, aes(x=factor(PUBL_START), y=y, group=1)) + geom_line() +
scale_x_discrete(breaks=c(1925,1930,1935,1940)) +
xlab("Year of Publication") + ylab("Number of Works")
View(meta)
?glm
?glm.control
setwd("C:/Users/Hoyt/Dropbox/CodeDataForBook/Chapter4")
library(ROCR)
library(e1071)
library(lattice)
library(ggplot2)
library(plyr)
library(tidyverse)
library(plotrix)
setwd("C:/Users/Hoyt/Dropbox/CodeDataForBook/Chapter3")
library(e1071)
library(ggplot2)
library(openxlsx)
#Load Derived Features
data_jp <- openxlsx::read.xlsx("./Results/all_extracted_features.xlsx", sheet = "Sheet 1")
require(gridExtra)
p <- ggplot(subset(data_jp, GENRE!="JUNBUNGAKU"), aes(factor(GENRE), ent_mean)) +
geom_violin(fill = "grey80", scale = "count", width = .75) +
geom_hline(yintercept=c(mean(subset(data_jp, GENRE=="SHISHOSETSU")$ent_mean)), linetype="dashed") +
labs(x="", y="Mean Entropy") + guides(fill = FALSE)
p
q <- ggplot(subset(data_jp, GENRE!="JUNBUNGAKU"), aes(factor(GENRE), ttr_mean)) +
geom_violin(fill = "grey80", scale = "count", width = .75) +
geom_hline(yintercept=c(mean(subset(data_jp, GENRE=="SHISHOSETSU")$ttr_mean)), linetype="dashed") +
labs(x="", y="Mean Type Token Ratio") + guides(fill = FALSE)
grid.arrange(p, q, ncol=2)
p <- ggplot(subset(data_jp, GENRE!="JUNBUNGAKU"), aes(factor(GENRE), ent_mean)) +
geom_violin(fill = "grey80", scale = "count", width = .75) +
geom_hline(yintercept=c(mean(subset(data_jp, GENRE=="SHISHOSETSU")$ent_mean)), linetype="dashed") +
labs(x="", y="Mean Entropy") + guides(fill = FALSE) +
scale_x_discrete(breaks=c("POPULAR","SHISHOSETSU"),labels=c("POPULAR","I-NOVEL"))
p
q <- ggplot(subset(data_jp, GENRE!="JUNBUNGAKU"), aes(factor(GENRE), ttr_mean)) +
geom_violin(fill = "grey80", scale = "count", width = .75) +
geom_hline(yintercept=c(mean(subset(data_jp, GENRE=="SHISHOSETSU")$ttr_mean)), linetype="dashed") +
labs(x="", y="Mean Type Token Ratio") + guides(fill = FALSE) +
scale_x_discrete(breaks=c("POPULAR","SHISHOSETSU"),labels=c("POPULAR","I-NOVEL"))
grid.arrange(p, q, ncol=2)
data_ch = data.frame(read.csv("Results/derived_data_ch.csv", encoding="UTF-8"))
highlight3 <- c("R_scn_032", "R_scn_033", "R_scn_018", "R_dig_020", "R_scn_053", "R_scn_026", "R_scn_031", "R_scn_034")
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, shape=GENRE, label=ROMANIZED_TITLE))
p + stat_smooth(method = "lm", color="black") + geom_point(aes(shape=GENRE), size=2) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=25, size=3.5) +
scale_shape_manual(labels=c("Popular", "Romantic"), values=c(4,1))
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, color=GENRE, label=AUTHOR_LAST))
p + geom_point(shape=16, size=1) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=25, size=3.5) +
scale_color_manual(labels=c("Popular", "Romantic"), values=c("blue", "red"))
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, color=GENRE, label=paste(AUTHOR_LAST, AUTHOR_FIRST, sep="_"))
p + geom_point(shape=16, size=1) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=25, size=3.5) +
scale_color_manual(labels=c("Popular", "Romantic"), values=c("blue", "red"))
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, color=GENRE, label=paste(AUTHOR_LAST, AUTHOR_FIRST, sep="_")))
p + geom_point(shape=16, size=1) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=25, size=3.5) +
scale_color_manual(labels=c("Popular", "Romantic"), values=c("blue", "red"))
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, shape=GENRE, label=paste(AUTHOR_LAST, AUTHOR_FIRST, sep="_")))
p + stat_smooth(method = "lm", color="black") + geom_point(aes(shape=GENRE), size=2) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=25, size=3.5) +
scale_shape_manual(labels=c("Popular", "Romantic"), values=c(4,1))
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, shape=GENRE, label=paste(AUTHOR_LAST, AUTHOR_FIRST, sep="_")))
p + stat_smooth(method = "lm", color="black") + geom_point(aes(shape=GENRE), size=2) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=0, size=4) +
scale_shape_manual(labels=c("Popular", "Romantic"), values=c(4,1))
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, shape=GENRE, label=paste(AUTHOR_LAST, AUTHOR_FIRST, sep="_")))
p + stat_smooth(method = "lm", color="black") + geom_point(aes(shape=GENRE), size=2) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=45, size=4) +
scale_shape_manual(labels=c("Popular", "Romantic"), values=c(4,1))
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, shape=GENRE, label=AUTHOR_LAST))
p + stat_smooth(method = "lm", color="black") + geom_point(aes(shape=GENRE), size=2) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=45, size=4) +
scale_shape_manual(labels=c("Popular", "Romantic"), values=c(4,1))
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, shape=GENRE, label=AUTHOR_LAST))
p + stat_smooth(method = "lm", color="black") + geom_point(aes(shape=GENRE), size=2) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=45, size=4, nudge_x=0.5) +
scale_shape_manual(labels=c("Popular", "Romantic"), values=c(4,1))
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, shape=GENRE, label=AUTHOR_LAST))
p + stat_smooth(method = "lm", color="black") + geom_point(aes(shape=GENRE), size=2) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=45, size=4, nudge_y=.05) +
scale_shape_manual(labels=c("Popular", "Romantic"), values=c(4,1))
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, shape=GENRE, label=AUTHOR_LAST))
p + stat_smooth(method = "lm", color="black") + geom_point(aes(shape=GENRE), size=2) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=45, size=4, nudge_y=.02) +
scale_shape_manual(labels=c("Popular", "Romantic"), values=c(4,1))
p <- ggplot(data_ch, aes(x=thought, y=ent_mean, shape=GENRE, label=AUTHOR_LAST))
p + stat_smooth(method = "lm", color="black") + geom_point(aes(shape=GENRE), size=2) +
xlab("Thought/Feeling Words") + ylab("Mean Entropy") +
geom_text(data=subset(data_ch, FILE_ID %in% highlight3), angle=45, size=4, nudge_y=.03) +
scale_shape_manual(labels=c("Popular", "Romantic"), values=c(4,1))
library(openxlsx)
#Set working directory and load functions from files
setwd("C:/Users/Hoyt/Dropbox/CodeDataForBook/Chapter3/")
source(".Code/utils.R")
source("Code/utils.R")
source("Code/feature.R")
#Load derived feature data from the Python code
meta_jp <- openxlsx::read.xlsx("./Results/python_extracted_features.xlsx", sheet = "Sheet1")
